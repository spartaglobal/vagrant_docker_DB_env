# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "ubuntu/xenial64"

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  config.vm.network "forwarded_port", guest: 1433, host: 1433 # using 34 on host to prevent conflict - MS SQL DB
  config.vm.network "forwarded_port", guest: 5432, host: 5432 # using 5433 on host to prevent conflict


  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  config.vm.synced_folder "share/", "/vagrant"

  # settings for the virtual environment settings
  config.vm.provider "virtualbox" do |vb|
    # Customize the amount of memory on the VM:
    vb.memory = "3072"
  end

  # Provision Docker and git
  config.vm.provision :docker

  # Provision git
  config.vm.provision "shell" do |s|
    s.inline = "sudo apt-get update"
    s.inline = "sudo apt-get install -y git"
  end

  # Provision northwind database
  config.vm.provision "docker" do |d|
    d.run "kcornwall/sqlnorthwind",
      args: "--name sql_nw -p 1433:1433",
      daemonize: true
  end

  # docker build image for postgres database with IMDB data
  config.vm.provision "docker" do |d|
    d.build_image "/vagrant/imdb_docker/",
      args: "-t imdb_db_image"
  end

  # run postgres container and share ports
  config.vm.provision "docker" do |d|
    d.run "imdb_db_image",
      args: "--name imdb_db -e POSTGRES_PASSWORD=postgres -p 5432:5432",
      daemonize: true
  end


end
